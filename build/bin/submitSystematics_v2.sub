executable  = doFitOnly.sh
universe    = vanilla
#getenv 	    = True
#requirements = (OpSysAndVer =?= "CentOS7")
requirements = ( (OpSysAndVer =?= "CentOS7") && (Machine =!= LastRemoteHost) )
#requirements = ( (TARGET.has_avx2) && (OpSysAndVer == "CentOS7") && (Machine =!= LastRemoteHost) )
#on_exit_remove          = (ExitBySignal == False) && (ExitCode == 0)
max_retries             = 5

if defined b
    BASELINE = $(b)
else 
    BASELINE = bestNoExotic.txt
endif

if defined d
	OUTDIR = $(d)
else 
	OUTDIR = sys
endif

#espresso     = 20 minutes
#microcentury = 1 hour
#longlunch    = 2 hours
#workday      = 8 hours
#tomorrow     = 1 day

+JobFlavour = "tomorrow"
#+MaxDuration = 300
#request_memory = 8096
request_cpus   = 2
request_disk   = 800000

transfer_input_files = myFitter.exe, myPlotter.exe, main_psi.txt, $(OPTIONFILE), $(BASELINE), SignalIntegrationEventsCP_Acc_bkgPdf_trueP.root, psi_data_bkgPdf.root, mass_width.csv, MintDalitzSpecialParticles.csv, omnes/omnes_mod.txt, omnes/omnes.txt, sysBaseline/modelBaseline.txt, freeResoParams.txt, eff_files/SignalIntegrationEvents_Acc_bkgPdf_pidGen.root, eff_files/SignalIntegrationEvents_Acc_bkgPdf_pidRaw.root, doPhspInt.txt, rw_X_phsp.txt, toy_coreStart.root 
arguments = $(Process) main_psi.txt $(BASELINE) doPhspInt.txt rw_X_phsp.txt $(OPTIONFILE)
 
#output      = $(OUTDIR)/out_$(Process).out
output      = $(OUTDIR)/out_$SUBSTR(OPTIONFILE, 0, -4).out
#error       = $(OUTDIR)/error_$(Process).err
#log         = $(OUTDIR)/log_$(Process).log
error       = $(OUTDIR)/error.err
log         = $(OUTDIR)/log.log
#stream_output = True
#stream_error = True

#transfer_output_files = result.root, model.txt, log.txt, amp_plots.pdf, amp_plots2.pdf, amp_plots3.pdf
#transfer_output_remaps = "result.root = $(OUTDIR)/result_$SUBSTR(OPTIONFILE, 0, -4).root ; amp_plots.pdf = $(OUTDIR)/amp_plots_$SUBSTR(OPTIONFILE, 0, -4).pdf; amp_plots2.pdf = $(OUTDIR)/amp_plots2_$SUBSTR(OPTIONFILE, 0, -4).pdf; amp_plots3.pdf = $(OUTDIR)/amp_plots3_$SUBSTR(OPTIONFILE, 0, -4).pdf ; model.txt =  $(OUTDIR)/model_$SUBSTR(OPTIONFILE, 0, -4).txt ; log.txt = $(OUTDIR)/log_$SUBSTR(OPTIONFILE, 0, -4).txt"

transfer_output_files = result.root, model.txt, log.txt
transfer_output_remaps = "result.root = $(OUTDIR)/result_$SUBSTR(OPTIONFILE, 0, -4).root ; model.txt =  $(OUTDIR)/model_$SUBSTR(OPTIONFILE, 0, -4).txt ; log.txt = $(OUTDIR)/log_$SUBSTR(OPTIONFILE, 0, -4).txt"

#queue OPTIONFILE matching files sys_*.txt
queue OPTIONFILE matching files sys_ls16.txt
